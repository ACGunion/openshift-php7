#!/bin/bash

function install_php() {
    local pkg=php-${PHP_VERSION}.tar.gz

    mkdir -p ${BUILD_DIR}
    mkdir -p ${ROOT_DIR}/etc/php/conf.d
    pushd ${BUILD_DIR}

    echo '下载并安装 libmcrypt.'
    wget -O libmcrypt-2.5.8.tar.gz http://downloads.sourceforge.net/mcrypt/libmcrypt-2.5.8.tar.gz?big_mirror=0
    tar zxf libmcrypt-2.5.8.tar.gz
    cd libmcrypt-2.5.8
    ./configure --prefix=${OPENSHIFT_DATA_DIR}usr/local
    make -j4 && make install
    cd libltdl
    ./configure --prefix=${OPENSHIFT_DATA_DIR}usr/local --enable-ltdl-install
    make -j4 && make install
    cd ../..

    echo '下载并安装 mhash.'
    wget -O mhash-0.9.9.9.tar.gz http://downloads.sourceforge.net/mhash/mhash-0.9.9.9.tar.gz?big_mirror=0
    tar zxvf mhash-0.9.9.9.tar.gz
    cd mhash-0.9.9.9
    ./configure --prefix=${OPENSHIFT_DATA_DIR}usr/local
    make -j4 && make install
    cd ..

    echo '下载并安装 mcrypt.'
    wget -O mcrypt-2.6.8.tar.gz http://downloads.sourceforge.net/mcrypt/mcrypt-2.6.8.tar.gz?big_mirror=0
    tar zxf mcrypt-2.6.8.tar.gz
    cd mcrypt-2.6.8
    export LDFLAGS="-L${OPENSHIFT_DATA_DIR}usr/local/lib -L/usr/lib"
    export CFLAGS="-I${OPENSHIFT_DATA_DIR}usr/local/include -I/usr/include"
    export LD_LIBRARY_PATH="/usr/lib/:${OPENSHIFT_DATA_DIR}usr/local/lib"
    export PATH="/bin:/usr/bin:/usr/sbin:${OPENSHIFT_DATA_DIR}usr/local/bin:${OPENSHIFT_DATA_DIR}bin:${OPENSHIFT_DATA_DIR}sbin"
    touch malloc.h
    ./configure --prefix=${OPENSHIFT_DATA_DIR}usr/local --with-libmcrypt-prefix=${OPENSHIFT_DATA_DIR}usr/local
    make -j4 && make install
    cd ..

    if [ ! -d php-${PHP_VERSION} ]; then
        echo "Downloading ${pkg}."
        wget --output-document=./${pkg} http://php.net/distributions/php-${pkg}

        echo "Unpacking ${pkg}."
        tar xfz ${pkg}
    fi
    pushd php-${PHP_VERSION}

    if [[ ! -f config.log || `tail -n 1 config.log | tr -d '\n'` !=  'configure: exit 0' ]]; then
        echo "Configuring PHP."
        ./configure --prefix=${OPENSHIFT_DATA_DIR}php --with-config-file-path=${OPENSHIFT_DATA_DIR}php/etc --with-mcrypt=${OPENSHIFT_DATA_DIR}usr/local \
          --with-fpm-user=www --with-fpm-group=www --enable-fpm --enable-opcache \
          --disable-fileinfo --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-jpeg-dir \
          --with-iconv-dir=/usr/local --with-freetype-dir --with-png-dir --with-zlib --disable-rpath \
          --with-libxml-dir=/usr --enable-xml --enable-bcmath --enable-shmop --enable-exif --with-curl \
          --enable-sysvsem --enable-inline-optimization --enable-mbregex --enable-inline-optimization \
          --enable-mbstring --with-gd --enable-gd-native-ttf --with-openssl \
          --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-ftp \
          --with-gettext --enable-zip --enable-soap --disable-ipv6 --disable-debug
    fi

    echo "Compiling PHP."
    make -j4 && make install

    # Copy configuration file
    local ini=${TEMPLATE_DIR}/php.ini.tmpl
    if [[ -e  ${ini} ]]; then
        echo "Copy ini for ${1}."
        yes | cp ${ini} ${ROOT_DIR}/etc/php/php.ini
    else
        echo "Copy php.ini from php.ini-production."
        yes | cp php.ini-production ${ROOT_DIR}/etc/php/php.ini
    fi
    local ini=${TEMPLATE_DIR}/php_extra.ini.tmpl
    if [[ -e  ${ini} ]]; then
        echo "Copy ini for ${1}."
        yes | cp ${ini} ${ROOT_DIR}/etc/php/conf.d/php_extra.ini
    fi

    echo "Cleaning build directory."
    popd
    popd
    rm -rf ${BUILD_DIR}
}

function check_php() {

    local php_bin=${ROOT_DIR}/php/bin/php

    if [[ ! -e  ${php_bin} ]]; then
        echo "PHP not installed."
        install_php
    else
        local php_version=`${php_bin} -r "echo phpversion();"`

        if [[ ${PHP_VERSION} != ${php_version} ]]; then
            echo "PHP old, version: ${php_version}."
            install_php
        else
            echo "PHP up to date, version: ${php_version}."
        fi
    fi
}
