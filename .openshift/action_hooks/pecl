#!/bin/bash

function install_pecl() {
    if [ -z "${1}" ] || [ -z "${2}" ]; then
        echo "check_pecl: expected two arguments"
        return 1
    fi

    local pkg=${1}-${2}.tgz

    mkdir -p ${BUILD_DIR}
    pushd ${BUILD_DIR}

    echo "Downloading ${pkg}."
    wget http://pecl.php.net/get/${pkg}

    echo "Unpacking ${pkg}."
    tar xfz ${pkg}
    pushd ${1}-${2}

    echo "Configuring ${1}."
    ${ROOT_DIR}/app-root/data/php/bin/phpize -clean
    ./configure \
        --with-php-config=${ROOT_DIR}/app-root/data/php/bin/php-config \
        ${3}

    echo "Compiling ${1}."
    make install

    # Copy configuration files
    local ini=${TEMPLATE_DIR}/pecl/${1,,}.ini.tmpl
    if [[ -e  ${ini} ]]; then
        echo "Copy ini for ${1}."
        yes | cp ${ini} ${ROOT_DIR}/etc/php/conf.d/${1,,}.ini
    fi

    echo "Cleaning build directory."
    popd
    popd
    rm -rf ${BUILD_DIR}
}

function check_pecl() {
    if [ -z "${1}" ] || [ -z "${2}" ]; then
        echo "check_pecl: expected two arguments"
        return 1
    fi

    local php_bin=${ROOT_DIR}app-root/data/php/bin/php
    local pecl_version=`${php_bin} -r "echo phpversion('${1}');"`

    if [[ ${2} != ${pecl_version} ]]; then
        echo "PHP pecl ${1} not installed or old version."
        install_pecl ${1} ${2} ${3}
    else
        echo "PHP pecl ${1} up to date, version: ${2}."
    fi
}
